<!DOCTYPE html>
<html>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
<link href="css/styling.css" rel="stylesheet">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
<link rel="stylesheet" href="css/styling.css">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.2/TweenMax.min.js"></script>
<!--<script src="require.js"></script>-->
<script>// https://www.august.com.au/blog/svg-animation-with-greensock/

window.onload=function(){

const tl = new TimelineMax({immediateRender:true,paused:true});
const elem = document.getElementById('ellipse-53');
var playBtn = document.getElementById('btn1');
const playForm = document.getElementById('textArea');

const restartBtn = document.getElementById('btn4');

//elem.style.opacity = 0; moved to Set
let duration = 1;
var currentTimeScale = tl.timeScale(0.3); //sets current timeScale
let paused = tl.paused();
tl.duration(1);




playBtn.addEventListener('click', function(e) {

   tl.pause();
  // playBtn.innerHTML = "<i class='far fa-play-circle'></i>" ;
   paused=true;

  });

playForm.addEventListener('click', function(e){
  tl.play();
document.getElementById('btn1').innerHTML = "<i class='far fa-pause-circle'></i>";
  paused=false;
});
//maybe delete the restart, but i feel like if they forget, they should be able to restart
restartBtn.addEventListener('click', function(e) {
  tl.time(0);
  tl.pause();
  paused=true;
});



function myFunction() {
  var x = document.getElementById("fin");

    x.style.display = "block";
    x.innerhtml="'<p>Good Job! You reflected for ' + tl.duration() + 'seconds!<.p>'";
  /*  if (x.style.display === "none") {} else {
    x.style.display = "none";
  }*/
}




/* letter "g" animation
tl.set(elem, {
  opacity: 0
})
.to(elem, duration, {
  x: 1000,
  opacity: 1,
  scale: 2,
  ease: Elastic.easeOut.config(1, 0.3)
});

tl.to(elem, duration, {
  y: 100,
  scale: 8,
}, "-=1");
*/


/* flower animation */
const icnBg = document.getElementById('icnBg');
const petales_grp1 = document.querySelectorAll('.cls-8');
const petales_grp2 = document.querySelectorAll('.cls-9');
const petales_center = document.querySelector('.cls-10');

const plante_tige = document.querySelector('.cls-7');
const plante_leafRight = document.getElementById('group-7-2');
const plante_leafLeft = document.getElementById('group-7');

var flower = [petales_grp1, petales_grp2, petales_center];
var plante = [plante_tige, plante_leafRight, plante_leafLeft];


tl.set(petales_grp1, {
  scale: 0,
  transformOrign:'0% 0%',
  //rotation: 0
})

tl.set(petales_grp2, {
  scale: 0,
})

tl.set(petales_center, {
  scale: 0,
  transformOrign:'0% 0%'
})

tl.set(plante_tige, {
  scale: 0
})

tl.set(plante_leafRight, {
  scale: 0
})

tl.set(plante_leafLeft, {
  scale: 0
})


tl.staggerTo(plante, 0.8, {
  scale: 1
}, 0.5,

  //onComplete:tweenComplete,
  //onCompleteParams:["{self}"]},
  //1.2, myCompleteAll

);

tl.staggerTo(flower, 0.8, {
  scale: 1
}, 0.5
  //onComplete:tweenComplete,
  //onCompleteParams:["{self}"]},
  //1.2, myCompleteAll
);

tl.eventCallback("onComplete", function() {

  console.log(tl.totalDuration()+"seconds total. This is message from onComplete");
  //var x = 
  document.getElementById("fin")innerhtml='Good Job! You reflected for' + tl.duration() + 'seconds!';
//if (x.style.display == "none") {
  //x.style.display = " ";
  //  x.

//} else {
  //  x.style.display = "none";}
});
}

</script>

<title>Entry Page</title>

<!-- light grey bg for large screens -->

<body class="w3-light-grey w3-padding-16" onbeforeunload="return unloadPage()">

  <!-- w3-content defines a container for fixed size centered content,
and is wrapped around the whole page content,-->
  <div class="w3-content w3-white " style="max-width:800px; height:auto; max-height:800px">
    <!-- Grid

<div class="w3-card-4">
  <div class="w3-row">
    <div class="col-xs-1">
      <a href="Home Page.html">  </a>
     </div>
  </div> -->



    <!-- Header -->

    {{>bheader}}

    <div class="w3-card-4  w3-white">

      <div class="w3-cell-row">
        <!-- flower start here-->
        <div class=" w3-col w3-third w3-center">

          <div class="w3-content w3-center">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="697 709 512 512">
              <defs>
                <style>
                  .cls-1 {
                fill: #26424b;
                stroke: #95989a;
              }

              .cls-2 {
                clip-path: url(#clip-path);
              }

              .cls-3 {
                fill: #db605a;
              }

              .cls-4 {
                fill: #a93b3b;
              }

              .cls-5 {
                fill: #b34d49;
              }

              .cls-6 {
                fill: #8a3b38;
              }

              .cls-7 {
                fill: #78c1b0;
              }

              .cls-8 {
                fill: #fff;
              }

              .cls-9 {
                fill: #e9e8ea;
              }

              .cls-10 {
                fill: #e8b750;
              }

              .cls-11 {
                fill: #5e9085;
              }

              .cls-12 {
                stroke: none;
              }

              .cls-13 {
                fill: none;
              }
            </style>
                <clipPath id="clip-path">
                  <circle id="ellipse-45" class="cls-1" cx="256" cy="256" r="256" transform="translate(0 -1)" />
                </clipPath>
              </defs>
              <g id="group-mask-10" class="cls-2" transform="translate(697 710)">
                <g id="icnBg" data-name="ellipse-45" class="cls-1" transform="translate(0 -1)">
                  <circle class="cls-12" cx="256" cy="256" r="256" />
                  <circle class="cls-13" cx="256" cy="256" r="255.5" />
                </g>
                <rect id="rectangle-27" class="cls-3" width="325" height="240" transform="translate(104 350)" />
                <path id="path-75" class="cls-4" d="M37,184.92V162H362v22.446C326,201.713,266.415,213,199,213,132.2,213,73.093,201.92,37,184.92Z" transform="translate(67 210)" />
                <path id="path-47" class="cls-3" d="M-696.975-562.933l-.025.015V-644.77l.064.049C-694.221-680.928-606.194-710-498-710c109.9,0,199,30,199,67,0,.339-.007.674-.022,1.012L-299-642v82.125l-.331-.228C-305.323-524.912-391.979-497-498-497-606.845-497-695.279-526.422-696.975-562.933Z"
                  transform="translate(764 898)" />
                <ellipse id="ellipse-49" class="cls-5" cx="162.5" cy="60" rx="162.5" ry="60" transform="translate(104 206)" />
                <path id="path-57" class="cls-6" d="M-682.879-625.5C-657.5-646.423-600.61-661-534.5-661s123,14.576,148.38,35.5C-411.5-604.577-468.39-590-534.5-590S-657.5-604.577-682.879-625.5Z" transform="translate(801 916)" />
                <rect id="rectangle-28" class="cls-7" width="30" height="273" transform="translate(254 53)" />
                <ellipse id="ellipse-52" class="cls-8" cx="97" cy="20" rx="97" ry="20" transform="translate(172 102)" />
                <ellipse id="ellipse-52-2" data-name="ellipse-52" class="cls-8" cx="97" cy="20" rx="97" ry="20" transform="translate(289 25) rotate(90)" />
                <path id="path-77" class="cls-9" d="M-633.416-614.231C-669.7-615.765-697-622.387-697-630.323s27.3-14.558,63.583-16.093C-631.881-682.7-625.26-710-617.323-710s14.558,27.3,16.094,63.584c36.288,1.535,63.583,8.157,63.583,16.093s-27.295,14.558-63.583,16.093c-1.535,36.288-8.157,63.584-16.094,63.584S-631.881-577.942-633.416-614.231Z"
                  transform="translate(259.413 1004.219) rotate(45)" />
                <circle id="ellipse-53" class="cls-10" cx="22" cy="22" r="22" transform="translate(247 100)" />
                <g id="group-7">
                  <path id="ellipse-54" class="cls-7" d="M38.5-17S77,17.237,77,38.5,38.5,99,38.5,99,0,59.763,0,38.5,38.5-17,38.5-17Z" transform="matrix(0.602, -0.799, 0.799, 0.602, 150.586, 246.073)" />
                  <path id="ellipse-54-2" data-name="ellipse-54" class="cls-11" d="M38.5-17S77,17.237,77,38.5,38.5,99,38.5,99Z" transform="matrix(0.602, -0.799, 0.799, 0.602, 150.586, 246.073)" />
                </g>
                <g id="group-7-2" data-name="group-7" transform="translate(628.653 132.038) rotate(110)">
                  <path id="ellipse-54-3" data-name="ellipse-54" class="cls-7" d="M38.5-17S77,17.237,77,38.5,38.5,99,38.5,99,0,59.763,0,38.5,38.5-17,38.5-17Z" transform="matrix(0.602, -0.799, 0.799, 0.602, 150.586, 246.073)" />
                  <path id="ellipse-54-4" data-name="ellipse-54" class="cls-11" d="M38.5-17S77,17.237,77,38.5,38.5,99,38.5,99Z" transform="matrix(0.602, -0.799, 0.799, 0.602, 150.586, 246.073)" />
                </g>
              </g>
            </svg>
          </div>

          <!--Timer controls-->

          <div class="w3-card ">
            <div class="tool">
              <button class="w3-btn" id="btn1"><i class='far fa-pause-circle'></i></button>
              <button class="w3-btn" id="btn4"><i class="fas fa-undo-alt"></i></button>
            </div>

            <div class="w3-panel w3-blue">
              <p id="fin" >Write here!</p>
            </div>
            <!--<span class="w3-text w3-alert"></span>-->
          </div>

        </div>




        <!-- FORM -->
        <div class="w3-col w3-twothird w3-center w3-white w3-padding-small">

          <div class="form-group">
            <textarea class="form-control rounded-0" id="textArea" placeholder="Write here, right now...Clicking inside the text box starts the timer!" rows="5"></textarea>
          </div>
          <!-- TAG AND SAVE -->
          <div class="w3-row w3-card-4 w3-padding-small w3-white">
            <div class="col-xs-10">
              <span id="tag1" class="w3-tag"></span>
              <span id="tag2" class="w3-tag"></span>
              <button type="button mx-auto" class="w3-btn btn-default" id="myBtn">Save</button>

              <div id="myModal" class="modal">

                <!-- Modal content -->
                <div class="modal-content">
                  <span class="close">&times;</span>
                  <h2>Draft Saved!</h2>
                  <p> View your post in </p>
                  <a href="/bpastentries"> <button class="w3-button btn-info w3-blue">Past Entries.</button></a>
                </div>

              </div>
            </div>
          </div>

        </div>



      </div>
    </div><!-- END CONTENT-->


    <!-- END BODY -->
</body>

<script>
  $(document).ready(function() {
    $("div[data-includeHTML]").each(function() {
      $(this).load($(this).attr("data-includeHTML"));
    });
  });
</script>

<script>
  var unsaved = false;

  //PROJ.JS
  function goBack() {
    window.history.back();
  }

  function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
      results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
  }
  // each <a> element
  // class="... tag"
  // prompt2.js
  document.getElementById("tag1").innerHTML = getParameterByName('tag1');
  document.getElementById("tag2").innerHTML = getParameterByName('tag2');

  function download() {
    var text = document.getElementById("exampleFormControlTextarea2").value;
    text = text.replace(/\n/g, "\r\n"); // To retain the Line breaks.
    var blob = new Blob([text], {
      type: "text/plain"
    });
    var anchor = document.createElement("a");
    anchor.download = "entries.txt";
    anchor.href = window.URL.createObjectURL(blob);
    anchor.target = "_blank";
    anchor.style.display = "none"; // just to be safe!
    document.body.appendChild(anchor);
    anchor.click();
    document.body.removeChild(anchor);
  }

  // Get the modal
  var modal = document.getElementById('myModal');
  // Get the button that opens the modal
  var btn = document.getElementById("myBtn");
  // Get the <span> element that closes the modal
  var span = document.getElementsByClassName("close")[0];
  // When the user clicks the button, open the modal

  btn.onclick = function() {
    // var fs = require('fs');
    modal.style.display = "block";
    const entry = $('#textArea').val();
    console.log(entry);
    var oldEntry = JSON.parse(localStorage.getItem("entry"));
    var entryArr = oldEntry ? oldEntry : [];
    var entryItem = {
      date: new Date().toLocaleDateString(),
      tag1: getParameterByName('tag1'),
      tag2: getParameterByName('tag2'),
      content: entry
    };
    entryArr.unshift(entryItem);
    localStorage.setItem("entry", JSON.stringify(entryArr));
    // fs.writeFile("entry.json", JSON.stringify(entryArr));

    unsaved = false; //now saved
  }
  // When the user clicks on <span> (x), close the modal
  span.onclick = function() {
    modal.style.display = "none";
  }
  // When the user clicks anywhere outside of the modal, close it
  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }

  ////unsaved Function////////////////////////////////////////////////////////


  $("#textArea").change(function() { //triggers change in all input fields including text type
    unsaved = true;
  });

  function unloadPage() {
    if (unsaved) {
      return "You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?";
    }
  }

  $('#save').click(function() {
    unsaved = false;
  });
</script>


</html>
